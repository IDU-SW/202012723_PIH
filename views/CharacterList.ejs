<html>
<head>
    <meta charset="UTF-8" />
    <h1>LOL Character List</h1>

    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>

    <style> #btnLogin{ border-radius: 5px; border: 1px solid rgb(0, 85, 119); background-color: rgba(0,0,0,0); color: rgb(0, 85, 119); padding: 5px; } #btnLogin input:hover{ color:white; background-color: rgb(0, 85, 119); }
            #btnProfile{ border-top-left-radius: 5px; border-bottom-left-radius: 5px; margin-right:-4px; } #btnLogout{ border-top-right-radius: 5px; border-bottom-right-radius: 5px; margin-left:-3px; } #logout input{ border: 1px solid rgb(0, 85, 119); background-color: rgba(0,0,0,0); color: rgb(0, 85, 119); padding: 5px; } #logout input:hover{ color:white; background-color: rgb(0, 85, 119); } </style>
</head>
<body>
    <ul>
        <% data.forEach(function(item) { %>
            <li>
                 <a href="../LOLCharacter/<%= item.id %>"> <%= item.name %> 
            </li>
        <% }) %>
    </ul>
    <br>
    <a href="javascript:void(0);" onclick="ClickAdd();">추가</a>
    <p>
    <form name="loginForm" method="POST" action="../UserProfile">
      <div id="login">
         <input type="text" id="id" placeholder="User ID">
         <input type="password" id="password" placeholder="Password">
         <input type="button" id="btnLogin" onclick="login()" value="Login">
      </div>
      <div id="logout">
         <input type="hidden" id="userToken" name="userToken" value="Test">
         <input type="submit" id="btnProfile" value="Profile">
         <input type="button" id="btnLogout" onclick="logout()" value="Logout">
      </div>
   </form>
    <script>
       var jwt = null;

        $(document).ready(function () {
            jwt = window.sessionStorage.getItem("token");
            document.getElementById('userToken').value = jwt;
            setLoginDisplay();
        });

        function login() {
            const id = document.getElementById('id').value;
            const password = document.getElementById('password').value;

            if ( !id || !password ) {
               console.log('no id, password');
               return
            }

            fetch('/LOLCharacterLogin', {
               method: 'POST',
               headers: [["Content-Type", "application/json"]],
               body: JSON.stringify({id, password})
            })
            .then(response => {
               const statusCode = response.status;
               if ( 200 != statusCode ) {
                  alert("로그인 실패");
                  return;
               }
               return response.json()
            })
            .then( data => {
               const token = data.token;
               console.log('login success. Token:', token);
               
               jwt = token;
               window.sessionStorage.setItem("token", token);
               document.getElementById('userToken').value = jwt;
               setLoginDisplay();
            })
            .catch( error => {
               console.error('login error :', error);
            })

         }         

         function logout() {
            // 토큰 제거
            jwt = null;
            window.sessionStorage.removeItem("token");
            setLoginDisplay();
         }

         function setLoginDisplay() {
             if(!jwt) {  //  토큰이 없는 경우. 로그인을 안 한 경우.
                $('#login').show();
                $('#logout').hide();
            }
             else { 
                $('#login').hide();
                $('#logout').show();
            }
         }

         function ClickAdd() {
            fetch('/tokenCheck', {
               method: 'GET',
               headers: [["Authorization", jwt]]
            })
            .then(response => {
               const statusCode = response.status;
               if ( 200 != statusCode ) {
                   console.log('토큰 인증 실패, statusCode: ' + statusCode);
                   alert("로그인이 필요한 기능입니다");
               }
               else {
                  window.location.href = "../LOLCharacterAdd";
               }
            })
            .catch( error => {
               console.error('public info error :', error);
            });

            return returnValue;
        }
    </script>
</body>
</html>